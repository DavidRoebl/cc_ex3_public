/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.User;
import io.swagger.model.Users;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-12-08T23:11:14.377Z")

@Api(value = "user", description = "the user API")
public interface UserApi {

    @ApiOperation(value = "get all users", notes = "returns a list containing all users", response = Users.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A list of User", response = Users.class) })
    
    @RequestMapping(value = "/users",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Users> userGet();


    @ApiOperation(value = "add new user", notes = "creates a new user and returns the user object", response = User.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "newly created user", response = User.class) })
    
    @RequestMapping(value = "/users",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<User> userPost(@ApiParam(value = "the user to create" ,required=true )  @Valid @RequestBody User user);

}
